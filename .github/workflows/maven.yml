name: Java CI

on: [push]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false # this is required for the javadoc deploy plugin
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2
          ~/.cache/pip
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2-
#    From a runtime perspective, it would make sense to cache OAEI files. However, in order to test also the
#    TrackRepostitory and related classes, we decided not to cache those files.
#    - name: Cache OAEI
#      uses: actions/cache@v1
#      with:
#        path: ~/oaei_track_cache
#        key: ${{ runner.os }}-m2-${{ hashFiles('**/TrackRepository.java') }}
#        restore-keys: ${{ runner.os }}-oaei
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
    - name: Install python dependencies
      run: pip install -r ./matching-ml/src/main/resources/requirements.txt
    - name: Build with Maven ðŸ“¦
      #run: mvn -B package --file pom.xml
      run: mvn clean install
    - name: Coveralls
      run: mvn coveralls:report -DrepoToken=${{ secrets.COVERALLS }}
    - name: Generate JavaDoc Documentation ðŸ“š
      run: mvn clean javadoc:aggregate
    - name: Deploy JavaDoc ðŸš€
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages # The branch the action should deploy to.
        FOLDER: target/site/apidocs
        TARGET_FOLDER: javadoc_latest
    - name: Install the MarkDown DocLet ðŸ”Œ
      run: |
        cd ./documentation/melt_doclet
        mvn clean install
    - name: Generate MarkDown Documentation ðŸ“š
      run: mvn site -P ci-run
  build-multi-platform:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2
          ~/.cache/pip
        key: ${{ matrix.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ matrix.os }}-m2-
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
    - name: Install python dependencies
      run: pip install -r ./matching-ml/src/main/resources/requirements.txt
    - name: Build with Maven
      #run: mvn -B package --file pom.xml
      run: mvn clean install