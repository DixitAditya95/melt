name: Java CI

on: [push]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # this is required for the javadoc deploy plugin
      - name: Set up JDK 15
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '15'
      - name: Print maven version
        run: mvn -version
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}-1
      - name: Cache Python packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}-1
      #    From a runtime perspective, it would make sense to cache OAEI files. However, in order to test also the
      #    TrackRepostitory and related classes, we decided not to cache those files.
      #    - name: Cache OAEI
      #      uses: actions/cache@v1
      #      with:
      #        path: ~/oaei_track_cache
      #        key: ${{ runner.os }}-m2-${{ hashFiles('**/TrackRepository.java') }}
      #        restore-keys: ${{ runner.os }}-oaei
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      - name: Install python dependencies
        run: pip install -r ./matching-ml/src/main/resources/requirements.txt
      - name: Build with Maven and Run All Tests 📦🕵️
        #run: mvn -B package --file pom.xml
        run: mvn clean install
      - name: Coveralls
        run: mvn coveralls:report -DrepoToken=${{ secrets.COVERALLS }}
      - name: Generate JavaDoc Documentation 📚
        run: mvn clean javadoc:aggregate
      - name: Deploy JavaDoc 🚀
        uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages # The branch the action should deploy to.
          folder: target/site/apidocs
          target-folder: javadoc_latest
      - name: Install the MarkDown DocLet 🔌
        run: |
          cd ./documentation/melt_doclet
          mvn clean install
      - name: Generate MarkDown Documentation 📚
        run: mvn site -P ci-run
      - name: Deploy MarkDown 🚀
        uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages # The branch the action should deploy to.
          folder: target/site/apidocs/generated_markdown
          target-folder: 3_available_matcher_components/generated_markdown